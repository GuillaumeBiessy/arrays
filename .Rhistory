?`::`
library(devtools)
use_package("rlang")
library(arrays)
library(arrays)
install.packages("reshape2")
library(arrays)
library(arrays)
library(devtools)
use_test("test")
devtools::load_all(".")
x %>% aMake(dn)
x <- 1:10
dn <- list(x = 1:5, g = c("H", "F"))
x %>% aMake(dn)
A <- x %>% aMake(dn)
(A <- x %>% aMake(dn))
A %>% c
A %>% c %>% aMake(dn)
dimnames(A)
dim(A)
aSums(A, 1)
aSums
aSums(A, 1, F)
A %>% aSums(2)
?sum
d = 1
keep = T
na.rm = FALSE
stopifnot(is.numeric(d) || is.character(d))
if (!is.array(x)) {
if (is.character(d)) d <- rep(1, length(d))
stopifnot(length(d) <= 1)
if (length(d) == keep) return(x)
return(sum(x, na.rm = na.rm))
}
stopifnot(!is.null(names(dim(x))))
if (is.character(d)) {
ndims <- names(dim(x))
stopifnot(all(d %in% ndims))
d <- match(d, ndims)
}
stopifnot(all(d <= length(dim(x))))
dims <- seq_along(dim(x))
cdims <- setdiff(dims, d)
head_d <- if (keep) cdims else d
tail_d <- if (!keep) cdims else d
x
x = 1
x = A
stopifnot(is.numeric(d) || is.character(d))
if (!is.array(x)) {
if (is.character(d)) d <- rep(1, length(d))
stopifnot(length(d) <= 1)
if (length(d) == keep) return(x)
return(sum(x, na.rm = na.rm))
}
stopifnot(!is.null(names(dim(x))))
if (is.character(d)) {
ndims <- names(dim(x))
stopifnot(all(d %in% ndims))
d <- match(d, ndims)
}
stopifnot(all(d <= length(dim(x))))
dims <- seq_along(dim(x))
cdims <- setdiff(dims, d)
head_d <- if (keep) cdims else d
tail_d <- if (!keep) cdims else d
x <- aperm(x, c(head_d, tail_d))
x
colSums(x, na.rm = na.rm, dims = length(head_d))
colSums
?colSums
colSums(x, na.rm = na.rm, dims = length(head_d)) %>% dim
head_d
tail_d
d = integer()
aSums(A, d)
aSums(A, d, F)
aSums <- function(x, d, keep = T, na.rm = FALSE, dimdrop = FALSE) {
stopifnot(is.numeric(d) || is.character(d))
if (!is.array(x)) {
if (is.character(d)) d <- rep(1, length(d))
stopifnot(length(d) <= 1)
if (length(d) == keep) return(x)
return(sum(x, na.rm = na.rm))
}
stopifnot(!is.null(names(dim(x))))
if (is.character(d)) {
ndims <- names(dim(x))
stopifnot(all(d %in% ndims))
d <- match(d, ndims)
}
stopifnot(all(d <= length(dim(x))))
dims <- seq_along(dim(x))
cdims <- setdiff(dims, d)
head_d <- if (keep) cdims else d
tail_d <- if (!keep) cdims else d
if (dimdrop) {
if (length(head_d) == 0) return(x)
if (length(tail_d) == 0) return(sum(x))
return(colSums(x, na.rm = na.rm, dims = length(head_d)))
}
x <- aperm(x, c(head_d, tail_d))
return(colSums(x, na.rm = na.rm, dims = length(head_d)))
}
aSums(A, d, F)
aSums(A, d, T)
devtools::load_all(".")
x <- 1:10
dn <- list(x = 1:5, g = c("H", "F"))
(A <- x %>% aMake(dn))
dim(A)
dimnames(A)
A %>% c %>% aMake(dn)
aSums(A, 1)
aSums(A, 1, F)
aSums(A, 2)
aSums(A, 1)
aSums(A, 2)
dimnames(A)
x = A
d = 1
keep = T
na.rm = FALSE
keep = TRUE
stopifnot(is.numeric(d) || is.character(d))
if (!is.array(x)) {
if (is.character(d)) d <- rep(1, length(d))
stopifnot(length(d) <= 1)
if (length(d) == keep) return(x)
return(sum(x, na.rm = na.rm))
}
stopifnot(!is.null(names(dim(x))))
if (is.character(d)) {
ndims <- names(dim(x))
stopifnot(all(d %in% ndims))
d <- match(d, ndims)
}
stopifnot(all(d <= length(dim(x))))
dims <- seq_along(dim(x))
dims
cdims <- setdiff(dims, d)
cdims
head_d <- if (keep) cdims else d
tail_d <- if (!keep) cdims else d
head_d
tail_d
x <- aperm(x, c(head_d, tail_d))
colSums(x, na.rm = na.rm, dims = length(head_d))
dimnames(x)
dimnames(x)[tail_d]
tail_d
x
dimnames(x)[tail_d]
colSums(x, na.rm = na.rm, dims = length(head_d))
colSums(x, na.rm = na.rm, dims = length(head_d)) %>%
aMake(dimnames(x)[head_d])
devtools::load_all(".")
x <- 1:10
dn <- list(x = 1:5, g = c("H", "F"))
(A <- x %>% aMake(dn))
dim(A)
dimnames(A)
A %>% c %>% aMake(dn)
aSums(A, 1)
aSums(A, 1, F)
aSums(A, 2)
x = A
stopifnot(is.numeric(d) || is.character(d))
if (!is.array(x)) {
if (is.character(d)) d <- rep(1, length(d))
stopifnot(length(d) <= 1)
if (length(d) == keep) return(x)
return(sum(x, na.rm = na.rm))
}
stopifnot(!is.null(names(dim(x))))
if (is.character(d)) {
ndims <- names(dim(x))
stopifnot(all(d %in% ndims))
d <- match(d, ndims)
}
stopifnot(all(d <= length(dim(x))))
dims <- seq_along(dim(x))
cdims <- setdiff(dims, d)
head_d <- if (keep) cdims else d
tail_d <- if (!keep) cdims else d
if (length(head_d) == 0) return(x)
if (length(tail_d) == 0) return(sum(x))
dn <- dimnames(x)[head_d]
x <- aperm(x, c(head_d, tail_d))
dn
d
A
x = A
x
stopifnot(is.numeric(d) || is.character(d))
if (!is.array(x)) {
if (is.character(d)) d <- rep(1, length(d))
stopifnot(length(d) <= 1)
if (length(d) == keep) return(x)
return(sum(x, na.rm = na.rm))
}
stopifnot(!is.null(names(dim(x))))
if (is.character(d)) {
ndims <- names(dim(x))
stopifnot(all(d %in% ndims))
d <- match(d, ndims)
}
stopifnot(all(d <= length(dim(x))))
dims <- seq_along(dim(x))
cdims <- setdiff(dims, d)
head_d <- if (keep) cdims else d
tail_d <- if (!keep) cdims else d
if (length(head_d) == 0) return(x)
if (length(tail_d) == 0) return(sum(x))
dn <- dimnames(x)[head_d]
dn
head_d
d
keep = TRUE
dimnames(x)[tail_d]
dn <- dimnames(x)[tail_d]
x <- aperm(x, c(head_d, tail_d))
out <- colSums(x, na.rm = na.rm, dims = length(head_d)) %>%
aMake(dimnames(x)[head_d])
out
aSums <- function(x, d, keep = TRUE, na.rm = FALSE) {
stopifnot(is.numeric(d) || is.character(d))
if (!is.array(x)) {
if (is.character(d)) d <- rep(1, length(d))
stopifnot(length(d) <= 1)
if (length(d) == keep) return(x)
return(sum(x, na.rm = na.rm))
}
stopifnot(!is.null(names(dim(x))))
if (is.character(d)) {
ndims <- names(dim(x))
stopifnot(all(d %in% ndims))
d <- match(d, ndims)
}
stopifnot(all(d <= length(dim(x))))
dims <- seq_along(dim(x))
cdims <- setdiff(dims, d)
head_d <- if (keep) cdims else d
tail_d <- if (!keep) cdims else d
if (length(head_d) == 0) return(x)
if (length(tail_d) == 0) return(sum(x))
dn <- dimnames(x)[tail_d]
x <- aperm(x, c(head_d, tail_d))
out <- colSums(x, na.rm = na.rm, dims = length(head_d)) %>%
aMake(dimnames(x)[head_d])
return(out)
}
x <- 1:10
dn <- list(x = 1:5, g = c("H", "F"))
(A <- x %>% aMake(dn))
dim(A)
dimnames(A)
A %>% c %>% aMake(dn)
aSums(A, 1)
aSums(A, 1, F)
aSums(A, 2)
aSums
aSums(A, 1)
x <- 1:10
dn <- list(x = 1:5, g = c("H", "F"))
(A <- x %>% aMake(dn))
dim(A)
dimnames(A)
A %>% c %>% aMake(dn)
aSums(A, 1)
x <- 1:10
dn <- list(x = 1:5, g = c("H", "F"))
(A <- x %>% aMake(dn))
dim(A)
dimnames(A)
A %>% c %>% aMake(dn)
A
x = A
d = 1
keep = T
dims <- seq_along(dim(x))
dims
dims <- dim(x) %>% seq_along
cdims <- setdiff(dims, d)
cdims
dims
keep
head_d <- if (keep) cdims else d
head_d
tail_d <- if (!keep) cdims else d
tail_d
length(head_d)
length(tail_d)
dimnames(x)
dn <- dimnames(x)[tail_d]
devtools::load_all(".")
aSums <- function(x, d, keep = TRUE, na.rm = FALSE) {
stopifnot(is.numeric(d) || is.character(d))
if (!is.array(x)) {
if (is.character(d)) d <- rep(1, length(d))
stopifnot(length(d) <= 1)
if (length(d) == keep) return(x)
return(sum(x, na.rm = na.rm))
}
stopifnot(!is.null(names(dim(x))))
if (is.character(d)) {
ndims <- names(dim(x))
stopifnot(all(d %in% ndims))
d <- match(d, ndims)
}
stopifnot(all(d <= length(dim(x))))
dims <- dim(x) %>% seq_along
cdims <- setdiff(dims, d)
head_d <- if (keep) cdims else d
tail_d <- if (!keep) cdims else d
if (length(head_d) == 0) return(x)
if (length(tail_d) == 0) return(sum(x))
dn <- dimnames(x)[tail_d]
x <- aperm(x, c(head_d, tail_d))
out <- colSums(x, na.rm = na.rm, dims = length(head_d)) %>% aMake(dn)
return(out)
}
x <- 1:10
dn <- list(x = 1:5, g = c("H", "F"))
(A <- x %>% aMake(dn))
dim(A)
dimnames(A)
A %>% c %>% aMake(dn)
aSums(A, 1)
aSums(A, 1, F)
aSums(A, 2)
aSums(A, 2, F)
library(arrays)
library(arrays)
library(arrays)
devtools::load_all(".")
source("preamble.R")
# Data
data <- fread("donnees_defaut.csv") %>%
tibble %>%
rename(Effectif = Nb_contrat, EtatDepart = Etat, Sain = Nb_passagesain, CDL2 = Nb_passageCDL2, CDL3 = Nb_passageCDL3, Sortie = Nb_sortie, Defaut = Nb_sinistre) %>%
rowwise %>%
mutate(Exposition = Effectif - (sum(c_across(Sain:Defaut)) - if_else(EtatDepart == "Sain", Sain, if_else(EtatDepart == "CDL2", CDL2, CDL3))) / 2) %>%
pivot_longer(cols = Sain:Defaut, names_to = "EtatAtteint", values_to = "Transitions") %>%
mutate(EtatDepart = EtatDepart %>% factor(levels = c("sain", "CDL2", "CDL3", "Sortie", "Defaut"), labels = c("Sain", "CDL2", "CDL3", "Sortie", "Defaut")),
EtatAtteint = EtatAtteint %>% factor(levels = c("Sain", "CDL2", "CDL3", "Sortie", "Defaut"))) %>%
select(AnneeComptable, Generation, Anciennete, EtatDepart, EtatAtteint, Effectif, Exposition, Transitions) %>%
filter(AnneeComptable < 2020)
summary(data)
data %>% plot_var(Anciennete, EtatDepart, EtatAtteint, weights = Transitions, scales = "free_y", facet = "grid")
data %>% plot_var(Anciennete, EtatDepart, EtatAtteint, weights = Transitions, scales = "free_y", nrow = 3)
data2 <- data %>% filter(EtatDepart != EtatAtteint) %>%
group_by(Anciennete, EtatDepart, EtatAtteint) %>%
summarize(Transitions = sum(Transitions), Effectif = sum(Effectif), Exposition = sum(Exposition)) %>%
mutate(Taux_brut = Transitions / Effectif,
Std_Taux_brut = ifelse(Taux_brut == 0, NA, sqrt(Taux_brut * (1 - Taux_brut) / Effectif)))
data2 %>% ggplot(aes(x = Anciennete)) +
geom_point(aes(y = Taux_brut)) +
geom_errorbar(aes(ymin = Taux_brut - 2 * Std_Taux_brut,
ymax = Taux_brut + 2 * Std_Taux_brut)) +
facet_wrap(vars(EtatDepart, EtatAtteint), labeller = label_custom, scales = "free_y") +
scale_y_continuous(labels = scales::percent) +
set_corporate_theme()
source("C:/Documents/HMD/preamble.R")
source("C:/Users/Guillaume BIESSY/Documents/HMD/preamble.R")
# Data
data <- fread("donnees_defaut.csv") %>%
tibble %>%
rename(Effectif = Nb_contrat, EtatDepart = Etat, Sain = Nb_passagesain, CDL2 = Nb_passageCDL2, CDL3 = Nb_passageCDL3, Sortie = Nb_sortie, Defaut = Nb_sinistre) %>%
rowwise %>%
mutate(Exposition = Effectif - (sum(c_across(Sain:Defaut)) - if_else(EtatDepart == "Sain", Sain, if_else(EtatDepart == "CDL2", CDL2, CDL3))) / 2) %>%
pivot_longer(cols = Sain:Defaut, names_to = "EtatAtteint", values_to = "Transitions") %>%
mutate(EtatDepart = EtatDepart %>% factor(levels = c("sain", "CDL2", "CDL3", "Sortie", "Defaut"), labels = c("Sain", "CDL2", "CDL3", "Sortie", "Defaut")),
EtatAtteint = EtatAtteint %>% factor(levels = c("Sain", "CDL2", "CDL3", "Sortie", "Defaut"))) %>%
select(AnneeComptable, Generation, Anciennete, EtatDepart, EtatAtteint, Effectif, Exposition, Transitions) %>%
filter(AnneeComptable < 2020)
summary(data)
data %>% plot_var(Anciennete, EtatDepart, EtatAtteint, weights = Transitions, scales = "free_y", facet = "grid")
data %>% plot_var(Anciennete, EtatDepart, EtatAtteint, weights = Transitions, scales = "free_y", nrow = 3)
data2 <- data %>% filter(EtatDepart != EtatAtteint) %>%
group_by(Anciennete, EtatDepart, EtatAtteint) %>%
summarize(Transitions = sum(Transitions), Effectif = sum(Effectif), Exposition = sum(Exposition)) %>%
mutate(Taux_brut = Transitions / Effectif,
Std_Taux_brut = ifelse(Taux_brut == 0, NA, sqrt(Taux_brut * (1 - Taux_brut) / Effectif)))
data2 %>% ggplot(aes(x = Anciennete)) +
geom_point(aes(y = Taux_brut)) +
geom_errorbar(aes(ymin = Taux_brut - 2 * Std_Taux_brut,
ymax = Taux_brut + 2 * Std_Taux_brut)) +
facet_wrap(vars(EtatDepart, EtatAtteint), labeller = label_custom, scales = "free_y") +
scale_y_continuous(labels = scales::percent) +
set_corporate_theme()
use_package("purrr")
library(devtools)
use_pacjage("dplyr")
use_package("dplyr")
library(arrays)
df %>% select(- .)
library(arrays)
x <- 1:10
dn <- list(x = 1:5, g = c("H", "F"))
(A <- x %>% aMake(dn))
dim(A)
dimnames(A)
A %>% c %>% aMake(dn)
devtools::load_all(".")
x <- 1:10
dn <- list(x = 1:5, g = c("H", "F"))
(A <- x %>% aMake(dn))
dim(A)
dimnames(A)
A %>% c %>% aMake(dn)
aSums(A, 1)
array_to_df
A
A %>% array_to_df("E")
A %>% array_to_df("E") %>% df_to_array(covariates = c("x", "g"))
A %>% array_to_df("E") %>% df_to_array(covariates = c("x", "g"))
devtools::load_all(".")
A %>% array_to_df("E") %>% df_to_array(covariates = c("x", "g"))
use_package("data.table")
devtools::load_all(".")
A %>% array_to_df("E") %>% df_to_array(covariates = c("x", "g"))
devtools::load_all(".")
library(arrays)
x <- 1:10
dn <- list(x = 1:5, g = c("H", "F"))
(A <- x %>% aMake(dn))
dim(A)
dimnames(A)
A %>% c %>% aMake(dn)
aSums(A, 1)
aSums(A, 1, F)
aSums(A, 2)
A %>% array_to_df("E") %>% df_to_array(covariates = c("x", "g"))
df_to_array
A %>% array_to_df("E") %>% df_to_array(covariates = c("x", "g"), "E")
devtools::load_all(".")
x <- 1:10
dn <- list(x = 1:5, g = c("H", "F"))
(A <- x %>% aMake(dn))
dim(A)
dimnames(A)
A %>% c %>% aMake(dn)
aSums(A, 1)
aSums(A, 1, F)
aSums(A, 2)
A %>% array_to_df("E") %>% df_to_array(covariates = c("x", "g"), "E")
A %>% array_to_df("E") %>% df_to_array(covariates = c("x", "g"), "E")
A
library(arrays)
?`[`
aMake
library(arrays)
devtools::load_all(".")
x <- 1:10
dn <- list(x = 1:5, g = c("H", "F"))
(A <- x %>% aMake(dn))
dim(A)
dimnames(A)
A %>% c %>% aMake(dn)
aSums(A, 1)
aSums(A, 1, F)
aSums(A, 2)
A %>% array_to_df("E") %>% df_to_array(covariates = c("x", "g"), "E")
A
A %>% aInsert("g", "F", 12)
aSums(A, 1)
aSums(A, 1) %>% aInsert("g", "F", 12)
aSums(A, 2) %>% aInsert("g", "F", 12)
A %>% aInsert("g", "F", 12)
A
A %>% aMorph(l = list(x = 1:7, g = c("H", "F")))
aSums(A, 2) %>% aMorph(l = list(x = 1:7, g = c("H", "F")))
aSums(A, 2) %>% aMorph(l = list(x = 1:7))
aSums(A, 2)
aSums(A, 1) %>% aMorph(l = list(x = 1:7))
dimnames(aSums(A, 1) %>% aMorph(l = list(x = 1:7)))
library(arrays)
library(arrays)
devtools::load_all(".")
x <- 1:10
dn <- list(x = 1:5, g = c("H", "F"))
(A <- x %>% aMake(dn))
dim(A)
dimnames(A)
A %>% c %>% aMake(dn)
aSums(A, 1)
aSums(A, 1, F)
aSums(A, 2)
A %>% array_to_df("E") %>% df_to_array(covariates = c("x", "g"), "E")
A %>% aInsert("g", "F", 12)
aSums(A, 1) %>% aMorph(l = list(x = 1:7))
A %>% aMorph(list(x = 1:4))
A %>% aMorph(list(g = c("H", "F", "B")))
aMorph
A %>% aMorph(list(x = 1:4))
aMorph
devtools::load_all(".")
A %>% aMorph(list(x = 1:4))
A %>% aMorph(list(g = c("H", "F", "B")))
A %>% aMorph(list(x = 1:4), TRUE)
library(arrays)
library(arrays)
library(arrays)
usethis::use_rmarkdown_template()
library(arrays)
library(arrays)
library(arrays)
library(arrays)
library(arrays)
